version: '3'

services:
  registry-cache1:
    labels:
      traefik.http.services.registry1.loadbalancer.server.port: 5000
      traefik.http.routers.registry1.rule: 'Host(`${CACHE_DOMAIN1}`)'
      traefik.http.routers.registry1.tls: 'true'
      traefik.http.routers.registry1.tls.certresolver: 'default'
      traefik.enable: 'true'
  # see https://github.com/EugenMayer/docker-image-traefik
  traefik:
    restart: always
    image: eugenmayer/traefik:2.x
    ports:
      - 80:8080
      - 443:8443
    environment:
      TRAEFIK_ACME_ENABLE: 'true'
      TRAEFIK_ACME_CHALLENGE: 'dns'
      TRAEFIK_ACME_CHALLENGE_DNS_PROVIDER: ${TRAEFIK_ACME_CHALLENGE_DNS_PROVIDER}
      TRAEFIK_ACME_CHALLENGE_DNS_CREDENTIALS: ${TRAEFIK_ACME_CHALLENGE_DNS_CREDENTIALS}
      TRAEFIK_HTTPS_ENABLE: 'only'
      TRAEFIK_DOCKER_ENABLE: 'true'
      TRAEFIK_DOCKER_EXPOSEDBYDEFAULT: 'false'
    volumes:
      - certs:/mnt/certs
      - filestorage:/mnt/filestorage
      - acme:/mnt/acme
      # mount our docker socket so our docker container can be discovered
      - /var/run/docker.sock:/var/run/docker.sock
volumes:
  certs:
  filestorage:
  acme:
